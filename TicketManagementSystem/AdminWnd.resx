<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>